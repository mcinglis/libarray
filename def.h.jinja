
// Copyright 2015  Malcolm Inglis <http://minglis.id.au>
//
// This file is part of Libarray.
//
// Libarray is free software: you can redistribute it and/or modify it under
// the terms of the GNU Affero General Public License as published by the
// Free Software Foundation, either version 3 of the License, or (at your
// option) any later version.
//
// Libarray is distributed in the hope that it will be useful, but WITHOUT ANY
// WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
// FOR A PARTICULAR PURPOSE. See the GNU Affero General Public License for
// more details.
//
// You should have received a copy of the GNU Affero General Public License
// along with Libarray. If not, see <https://gnu.org/licenses/>.


// This file is the result of rendering:
//
//     {{template_path}}
//
// You should make changes to this file by tuning the build process, or (at a
// stretch) modifying the generation script or template file; not by editing
// this file as-is.


#ifndef LIBARRAY_DEF_ARRAY_{{macroname}}_H
#define LIBARRAY_DEF_ARRAY_{{macroname}}_H


#include <libtypes/types.h>
#include <libmacro/logic.h>
#include <libmacro/nelem.h>
{% for p in sys_headers %}
#include <{{p}}>
{% endfor %}

{% for path in rel_headers %}
#include "{{p}}"
{% endfor %}


typedef struct arrayc_{{funcname}} {
    {{type}} const * e;
    size_t length;
} ArrayC_{{typename}};


typedef struct arraym_{{funcname}} {
    {{type}} * e;
    size_t length;
} ArrayM_{{typename}};


#define ARRAY_{{macroname}}( ... ) \
    { .e      = ( {{type}}[] ){ __VA_ARGS__ }, \
      .length = NELEM( ( {{type}}[] ){ __VA_ARGS__ } ) }


#define ARRAY_{{macroname}}__INVARIANTS( XS ) \
    ( IMPLIES( ( XS ).e == NULL, ( XS ).length == 0 ) )


#define ARRAYC_{{macroname}}( ... ) \
    ( ArrayC_{{typename}} ) ARRAY_{{macroname}}( __VA_ARGS__ )


#define ARRAYM_{{macroname}}( ... ) \
    ( ArrayM_{{typename}} ) ARRAY_{{macroname}}( __VA_ARGS__ )


#endif // ifndef LIBARRAY_DEF_ARRAY_{{macroname}}_H

